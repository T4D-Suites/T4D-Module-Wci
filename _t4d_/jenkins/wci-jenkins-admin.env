
_t4dModWciJenkinsAdminReloadFromDisk(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdminReloadFromDisk
#   - Name:
#       _t4dModWciJenkinsAdminReloadFromDisk
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Server="$1"
    local _Url="$(_t4dManifestXmlGetData srv name "$_Server" url $WS_WCI_CONFIG_FILE)"
    local _HtmlOutPutFile="$T4D_PROJECT_LOG_PATH/wci/_t4dModWciJenkinsAdminReloadFromDisk.html"
    if [[ "$_Url" != "" ]]; then
        if [[ ! -e "$T4D_MODULES_PATH/wci/${_Server}.jar" ]]; then
            _t4dDebugLog $perror "auto download jar not implemented yet"
            return $_t4dErrorCode
        fi
        java -jar $T4D_MODULES_PATH/wci/${_Server}.jar -auth $JENKINS_USER_AND_PASSWORD -s ${_Url} -webSocket reload-configuration
        # _t4dSrcJenkinsApiPost "$(echo ${_Url} | sed 's|/$||g')/manage/#" "$_HtmlOutPutFile"
    else
        _t4dDebugLog $perror "No Url found for $_Server"
    fi
    

###############################
}

_t4dModWciJenkinsAdminCreate(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdminCreate
#   - Name:
#       _t4dModWciJenkinsAdminCreate
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _path=""
    local _baseConfig=""
    local _gitSource="$(_t4dSrcGitInfoGetCloneUrl)"
    local _libSource=""
    local _gitFilter=".*"
    local _jenkinsFile="jenkinsfile"
    while [[ "$@" != "" ]]; do
        case "$1" in
            -type)
                shift
                _baseConfigName="$1"
                # jobs/_Base_/jobs/_MultiBranchPipeline_/config.xml
            ;;
            -git)
                shift
                _gitSource="$1"
            ;;
            -branchSource)
                shift
                _gitFilter="$1"
            ;;
            -jenkinsFile)
                shift
                _jenkinsFile="$1"
            ;;
            -srv)
                shift
                _server="$1"
            ;;
            *)
                _path="$1"
            ;;
        esac
        shift
    done

    baseConfig="$(_t4dJenkinsUtilsParseProjectPath $_baseConfigName | sed 's|job|jobs|g')/config.xml"
    _t4dPromptSquare "$_server"
    _t4dPromptInfo "Path"           "$_path" 17 ":" $plyellow
    _t4dPromptInfo "PipelineBase"   "$_baseConfig" 17 ":" $plyellow
    _t4dPromptInfo "GitSource"      "$_gitSource" 17 ":" $plyellow
    _t4dPromptInfo "LibSource"      "$_libSource" 17 ":" $plyellow
    _t4dPromptInfo "GitFilter"      "$_gitFilter" 17 ":" $plyellow
    _t4dPromptInfo "Jenkinsfile"    "$_jenkinsFile" 17 ":" $plyellow
    # _t4dDebugLog $plog "[$_server] _t4dSrcJenkinsSrvCreateJob $_path $_baseConfig $_gitSource $_libSource $_gitFilter $_jenkinsFile"
    # _t4dSrcJenkinsSrvCreateJob <path> <baseConfig> <gitSource> <libSource> [gitFilter] [jenkinsFile]

###############################
}

_t4dModWciJenkinsAdminSync(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdminSync
#   - Name:
#       _t4dModWciJenkinsAdminSync
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Server="$1"
    local _force="$2"
    local _SourceDir

    if [[ -e "$WS_ROOT/_Jenkins_/$_Server/.index" ]]; then
        _SourceDir="$WS_ROOT/_Jenkins_/$_Server/.index"
    else
        _SourceDir="$WS_ROOT/_Jenkins_/.index"
    fi

    if [[ -e "$_SourceDir" ]]; then
        local CHPWD=1
        cd $_SourceDir

        local _LibSource="$(_t4dManifestXmlGetData configuration name jenkins-lib git $WS_WCI_CONFIG_FILE)"
        local _Url="$(_t4dManifestXmlGetData srv name "$_Server" url $WS_WCI_CONFIG_FILE)"
        local _Root="$(_t4dManifestXmlGetData srv name "$_Server" root $WS_WCI_CONFIG_FILE)"
        local _User="$(_t4dManifestXmlGetData srv name "$_Server" admin $WS_WCI_CONFIG_FILE)"
        local _t4dRootPath="$(_t4dManifestXmlGetData srv name "$_Server" t4dRootPath $WS_WCI_CONFIG_FILE)"
        _t4dDebugLog $plog "Scanning $_Server Config"
        local _ConfigFiles="$(_t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvSearchConfigFiles -root "$_Root" "" )"


        local _Folders="$(find $_SourceDir | grep '_folder_.properties')"
        _t4dPromptSquare "Folders" $plblue
        for _folder in $(echo $_Folders); do
            local _name="$(echo $_folder | sed "s|${_SourceDir}/||g" | sed 's|.properties$||g')"
            local _dirName="$(dirname $_name)"
            local _path="$(cat $_folder | grep "^folder.path=" | cut -d '=' -f2)"
            if [[  "$(echo $_ConfigFiles | grep "$_path/config.xml")" != "" ]]; then
                 _t4dCheckSucceeded "$_dirName  ($_path) Already exist "
            else
                _t4dCheckInfo "$_dirName"
                if [[ "$_force" == "-force" ]] || [[ "$_force" == "-f" ]]; then
                    _t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvCreateFolder "$_path" "$_Root/jobs/_Base_/config.xml"
                fi
            fi
        done
        
        local _Pipelines="$(find $_SourceDir | grep '.properties$' | grep -v 'source.properties' | grep -v '_folder_.properties' )"
        _t4dPromptSquare "Pipeline" $plcyan
        for _pipeline in $(echo $_Pipelines); do

            local _PipeName="$(cat $_pipeline | grep "^pipeline.name=" | cut -d '=' -f2)"
            local _PipePath="$(cat $_pipeline | grep "^pipeline.path=" | cut -d '=' -f2)"
            local _PipeFilterBranch="$(cat $_pipeline | grep -Eo "pipeline.filterBranch=.*" | sed 's|pipeline.filterBranch=||g')"
            local _PipeJenkinsFile="$(cat $_pipeline | grep "^pipeline.jenkinsFile=" | cut -d '=' -f2)"
            local _GitSource="$(cat $_pipeline | grep "^pipeline.repoGit=" | cut -d '=' -f2)"
            local _PipeConfigFile="$(cat $_pipeline | grep "^pipeline.config.file=" | cut -d '=' -f2)"


            if [[  "$(echo $_ConfigFiles | grep "$_PipeConfigFile")" == "" ]]; then
                _t4dDebugLog $perror "config file $_PipeConfigFile does not exist"
                return $_t4dErrorCode
            fi

            
            if [[  "$(echo $_ConfigFiles | grep "$_PipePath/config.xml")" != "" ]]; then
                _t4dCheckSucceeded "$_PipeName Already exist "
            else
                _t4dCheckInfo "$_PipeName"
                _t4dDebugLog "      >" "$_PipePath"
                _t4dDebugLog "      >" "$_PipeFilterBranch"
                _t4dDebugLog "      >" "$_PipeJenkinsFile"
                _t4dDebugLog "      >" "$_GitSource"
                _t4dDebugLog "      >" "$_PipeConfigFile"

                if [[ "$_force" == "-force" ]] || [[ "$_force" == "-f" ]]; then
                    # _t4dDebugLog $plog "_t4dSrcJenkinsSrvCreateJob \"$_PipePath\" \"$_PipeConfigFile\" \"$_GitSource\" \"$_LibSource\" \"$_PipeFilterBranch\" \"$_PipeJenkinsFile\""
                    _t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvCreateJob "$_PipePath" "$_PipeConfigFile" "$_GitSource" "$_LibSource" "$_PipeFilterBranch" "$_PipeJenkinsFile"
                fi
            fi
        done
    else
        _t4dDebugLog $perror ">$_SourceDir< no such file or directory"
    fi

###############################
}

_t4dModWciJenkinsAdminGet(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdminGet
#   - Name:
#       _t4dModWciJenkinsAdminGet
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Server="$1"
    local _Path="$2"
    local _Url="$(_t4dManifestXmlGetData srv name "$_Server" url $WS_WCI_CONFIG_FILE)"
    local _Root="$(_t4dManifestXmlGetData srv name "$_Server" root $WS_WCI_CONFIG_FILE)"
    local _User="$(_t4dManifestXmlGetData srv name "$_Server" admin $WS_WCI_CONFIG_FILE)"
    local _t4dRootPath="$(_t4dManifestXmlGetData srv name "$_Server" t4dRootPath $WS_WCI_CONFIG_FILE)"
    local _XmlOutPutFile="$T4D_PROJECT_LOG_PATH/wci/_t4dModWciJenkinsAdmin.xml"
    local _TestNumber=1

    #GET
    _t4dDebugLog $plog "Pulling config files from $_Path"
    local _ConfigFiles="$(_t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvSearchConfigFiles -root "$_Root" "$_Path" )"
    
    if [[ "$(echo $_ConfigFiles | head -1 | grep "config.xml$")" != "" ]]; then
        local _CountFiles="$(echo $_ConfigFiles | wc -l | tr -d ' ')"
        for _file in $(echo $_ConfigFiles); do
            local _AbsolutePath="$(echo $_file | sed "s|$_Root||g" | sed 's|/config.xml$||g')"
            
            # _t4dDebugTimer "$_TestNumber" "$(echo $_AbsolutePath | sed 's|/jobs/|/|g')"
            _t4dDebugLogInProgress "Downloading File(s)" $_TestNumber $_CountFiles
            _t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvGetConfigFile $_file > $_XmlOutPutFile
            
            
            local _Data2="$(_t4dModWciJenkinsParseConfigXml "$_XmlOutPutFile")"
            _TestNumber=$(expr $_TestNumber + 1)
            echo "$_AbsolutePath|$_Data2"
            # _t4dModWciJenkinsConfigXmlStatus "$_AbsolutePath" "$_Data2"

        done
        _t4dDebugTimerReset 
    else
        _t4dDebugLog $perror "_t4dModWciJenkinsAdminGet - no config files found in >$_Root/$_Path<"
        _t4dDebugLog $pinfo "$_ConfigFiles"
        return $_t4dErrorCode
    fi

###############################
}
