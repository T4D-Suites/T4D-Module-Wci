
_t4dModWciCheckCredentialsFile(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciCheckCredentialsFile
#   - Name:
#       _t4dModWciCheckCredentialsFile
###
#   - Synopsis:
#       If file does not exist create it with directory
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _CredentialFile="$1"
    if [[ "$_CredentialFile" != "" ]]; then
        mkdir -p $(dirname $_CredentialFile)
        if [[ ! -e "$_CredentialFile" ]]; then
            touch $_CredentialFile
        fi
    fi
    

###############################
}

_t4dModWciDefault(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciDefault
#   - Name:
#       _t4dModWciDefault
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _wciConfigFile="${WS_WCI_CONFIG_FILE}"
    local _server="$(echo $1 | cut -d ':' -f1)"
    local _Path="$(echo $1 | grep -Eo ':.*' | cut -d ':' -f2)"

    _t4dModWciCheckCredentialsFile $T4D_MOD_WCI_CREDENTIALS_FILE

    if [[ -e "$_wciConfigFile" ]]; then
         local _SrvExist="$(_t4dManifestXmlGetLine srv name "${_server:-none}" $WS_WCI_CONFIG_FILE)"
        if [[ "$_SrvExist" == "" ]]; then
            if [[ "$_server" != "" ]]; then
                #Using $1 as path in order to force using default CI config.
                _Path="$_server"
            fi

            local _Remote="$(_t4dSrcGitInfoGetRemote)"
            local _Default="$(_t4dManifestXmlGetData default origin "$_Remote" srv $WS_WCI_CONFIG_FILE)"
            if [[ "$_Default" != "" ]]; then
                _t4dDebugLog $pinfo "Using $_Default"
                _server="$_Default"
            else
                _t4dDebugLog $perror "_t4dModWciDefault you did not specify any server and unable to found default for >$_Remote<"
            fi
        fi
        
        _t4dModWciLoadSrvInfo $_server

        local _Ci="$(_t4dVarCaseStyleConvert Pascalcase ${T4D_WCI_CI_TYPE:-none})"
        if [[ "$(command -v _t4dModWci${_Ci})" != "" ]]; then
            if [[ "$_Path" == "config" ]]; then
                _t4dModWci${_Ci}Configure $@
            elif [[ "$_Path" == "admin" ]]; then
                _t4dModWci${_Ci}Admin $@
            else
                if [[ "$T4D_WCI_AUTH_ACCESS" == "" ]]; then
                    _t4dPromptSquare "Credentials not found, please run >wci ${T4D_WCI_SRV_NAME}:config<" $plred
                    return $_t4dErrorCode
                else
                    _t4dModWciCheckConnectivity $T4D_WCI_CI_TYPE
                fi
                
                if [[ "$(echo $_Path | grep '^\-')" != "" ]]; then
                    #If No Path/NoServer has been sended but only action, we are able do determine default path on default server and execute this command.
                    _t4dModWci${_Ci} $T4D_WCI_CI_TYPE $@
                else
                    _t4dModWci${_Ci} $T4D_WCI_CI_TYPE:${_Path} ${@:2}
                fi
            fi
        fi
    else
        _t4dDebugLog $perror "Could not find WS_WCI_CONFIG_FILE >$WS_WCI_CONFIG_FILE<"
        return $_t4dErrorCode
    fi

###############################
}

_t4dModWciLoadSrvInfo(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciGetSrvInfo
#   - Name:
#       _t4dModWciGetSrvInfo
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Name="${1:-default}"
    local _Debug="$2"
    local _SrvUrl="$(_t4dManifestXmlGetData srv name "$_Name" url $WS_WCI_CONFIG_FILE)"
    T4D_WCI_SRV_URL=""
    T4D_WCI_SRV_NAME=""
    T4D_WCI_AUTH_ACCESS=""
    T4D_WCI_CI_TYPE=""

    if [[ "$_SrvUrl" != "" ]]; then
        local _Type="$(_t4dManifestXmlGetData srv name "$_Name" "type" $WS_WCI_CONFIG_FILE)"
        
        local _Creds="$(cat $T4D_MOD_WCI_CREDENTIALS_FILE | grep -v '^#' | grep "$_Name=.*" | head -1 | sed "s|^$_Name=||g")"
        T4D_WCI_SRV_URL="$_SrvUrl"
        T4D_WCI_SRV_NAME="$_Name"
        if [[ "$_Creds" != "" ]]; then
            T4D_WCI_AUTH_ACCESS="$_Creds"
        fi
        T4D_WCI_CI_TYPE="$_Type"
    fi

    case $T4D_WCI_CI_TYPE in
        jenkins)
            JENKINS_WEB_URL="${T4D_WCI_SRV_URL:-$JENKINS_WEB_URL}"
            JENKINS_USER_AND_PASSWORD="${T4D_WCI_AUTH_ACCESS:-$JENKINS_USER_AND_PASSWORD}"
        ;;
    esac

    if [[ "$_Debug" == "-debug" ]]; then
        echo "$T4D_WCI_SRV_NAME|$T4D_WCI_SRV_URL|$T4D_WCI_AUTH_ACCESS"
    fi

    

###############################
}

_t4dModWciList(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciList
#   - Name:
#       _t4dModWciList
###
#   - Synopsis:
#       List the CIs and give their status
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _servers="$(_t4dManifestXmlGetMarker "srv" "name" "${WS_WCI_CONFIG_FILE}")"
    _t4dPromptSquare 'SERVERS' "$plpurple"
    local _webStatus

    for _server in $(echo $_servers); do

        local _url="$(_t4dManifestXmlGetData "srv" "name" "$_server" "url" "${WS_WCI_CONFIG_FILE}")"
        local _user="$(_t4dManifestXmlGetData "srv" "name" "$_server" "admin" "${WS_WCI_CONFIG_FILE}")"
        local _dnsname="$(echo "$_url" | sed "s|^http.*//||g" | cut -d ':'  -f 1)"
        
        if [[ "$(curl -sS --connect-timeout 1 --max-time 1 ${_url:-empty} 2>&1 &> /dev/null)" == "" ]]; then
            if [[ "$(_t4dSrcFileSystemSshOutput $_user@$_dnsname "echo true" )" == "true" ]]; then
                _webStatus="$pemvalid"
            else 
                _webStatus="$pemvalid $pemwarning"
            fi
        else 
            _webStatus="$pemfailed"
        fi

        local _ip="$(_t4dSystemGetIp $_dnsname)"
        
        echo "    $(_t4dPromptVarWithSpaceAtEnd 21 "$_webStatus")$(_t4dPromptVarWithSpaceAtEnd 10 "$_server") $(_t4dPromptVarWithSpace 20 "$_ip")" | sed "s|%||g"

    done 

###############################
}
