_t4dModWciGitlabParseStatus(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciGitlabParseStatus
#   - Name:
#       _t4dModWciGitlabParseStatus
###
#   - Synopsis:
#       Parse status and return emoji
###
#   - Usage:
#       _t4dModWciGitlabParseStatus <status>
#
###
#   - Example:
#       * _t4dModWciGitlabParseStatus manual        = get last build path
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    case $1 in
        success) echo "$pemvalid" ;;
        manual) echo "$pemWarning" ;;
        failed) echo "$pemfailed" ;;
        running) echo "$pemrunning" ;;
        canceled) echo "$pemwarning" ;;
        *) echo "unknown: $1" ;;
    esac

###############################
}

_t4dModWciGitlabListParse(){
###### _t4dModWciGitlabListParse
#   Parse And Show GitLab List Result
#   Usage : _t4dModWciGitlabListParse <Name> <OutputJsonFile> <Line size>
##### DOCUMENTATION BLOC #####
    local _size=$(expr $(_t4dGetJsonData ${2} 'length') - 1) 2> /dev/null
    if [[ $_size -ge 1 ]]; then
        _t4dPromptSquare "List ${1}"
    fi
    for i in $(seq 0 $_size); do
        _t4dPromptInfo "$(_t4dGetJsonData ${2} ".[$i].name" )" "$(date -d $(_t4dGetJsonData ${2} ".[$i].commit.committed_date" ) +'%d-%m-%Y %R')" ${3:-50}
    done
}

_t4dModWciGitlabPipelineListParse(){
###### _t4dModWciGitlabPipelineListParse
#   Parse And Show GitLab List Result
#   Usage : _t4dModWciGitlabPipelineListParse <OutputJsonFile> [verbosityLvl] [internal]
##### DOCUMENTATION BLOC #####
    local _size=$(expr $(_t4dGetJsonData ${1} 'length') - 1) 2> /dev/null
    local _message="$(_t4dGetJsonData ${1} ".message")" 2> /dev/null
    local _verbosityLevel="${2:-$_verbosityLevel}"
    local _internal="${3:-false}"
    local _LogAtEnd=""
    local _OuputjsonFile="$T4D_PROJECT_LOG_PATH/wci/_t4dModWciGitlabListParse.json"
    # local _Tag="WIP"
    
    [[ "$_message" != "" ]] && _t4dPromptSquare "$_message"
    [[ "$_internal" == "false" ]] && [[ "$_message" == "" ]] && _t4dPromptSquare "Result ($(expr ${_size} + 1))"
    
    if [[ "$(echo $_size | grep '^-')" == "" ]] && [[ "$_message" == "" ]]; then
        for i in $(seq 0 $_size); do
            local __URL="$(_t4dGetJsonData ${1} ".[$i].web_url")"

            local __UUID="$(_t4dGitLabUtilsGetPullRequestUuid ${__URL})"
            local __KEY="$(echo $__UUID | cut -d '|' -f1)"
            local __REPOSITORY="$(echo $__UUID | cut -d '|' -f2)"
            local __ID="$(echo $__UUID | cut -d '|' -f3)"

            local __REF="$(_t4dGetJsonData ${1} ".[$i].ref")"
            local __STATUS="$(_t4dGetJsonData ${1} ".[$i].status")"

            local __CREATED="$(date -d $(_t4dGetJsonData ${1} ".[$i].created_at") +'%d-%m-%Y %R')"
            local __UPDATED="$(date -d $(_t4dGetJsonData ${1} ".[$i].updated_at") +'%d-%m-%Y %R')"
            
            case $_verbosityLevel in
                1)
                    local _COMPRESSED_LINE="$(_t4dModWciGitlabParseStatus ${__STATUS}) ${plcyan}$(_t4dPromptVarWithSpace 25 ${__REF})${pstd} ${puyellow}Update: $__UPDATED${pstd}"
                    echo "$_COMPRESSED_LINE ${plblue}${__URL}${pstd}" |sed 's|%||g'
                ;;
                2)
                    echo "$(_t4dPromptVarWithSpace 10 $(_t4dModWciGitlabParseStatus ${__STATUS})) ${plcyan}$(_t4dPromptVarWithSpace 6 ${__REF})${pstd} ${plyellow}Start: ${__CREATED}${pstd} ${pgreen}Last update: ${__UPDATED}${pstd}" |sed 's|%||g'
                    _t4dPromptEndOfLine "${__URL}" $plblue
                ;;
                *) echo "unknown $_verbosityLevel" ;;
            esac

        done
        echo $_LogAtEnd
    fi
}