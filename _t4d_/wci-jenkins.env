_t4dModWciJenkins(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkins
#   - Name:
#       _t4dModWciJenkins
###
#   - Synopsis:
#       jenkins main function
###
#   - Available Options:
#       * admin             = only for admin and from an existing jenkins server
#       * config            = help user to configure jenkins access by creating their own token
#       * start             = start build depending on context
#       * stop              = stop build linked
#       * kill              =  /!\ ADMIN /!\ kill builld linked when stop does not work
#       * startWithParams   = start a build with parameters
#       * restart           = stop previous build if any and start a new one
#       * sync              = launch scan pipeline to update branches
#       * release           =  /!\ Service Release Manager Only  /!\  
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Path="$(echo $1 | sed 's|jenkins||g' | cut -d ':' -f2)"
    local _Action="-get"
    local _ActionUnAvailable=""

    shift
    if [[ "$_Path" == "admin" ]] || [[ "$_Path" == "config" ]]; then
        _t4dDebugLog $perror "$_Path should be launch using server name and not generic"
        return $_t4dErrorCode
    else
        while [[ "$@" != "" ]]; do
            case "$1" in
                -*)
                    _Action="$1"
                    _Args="${@:2}"
                    break
                ;;
                *)
                    _Path="${_Path} $1"
                ;;
            esac
            shift
        done

        local _PathAgregated="$(_t4dModWciJenkinsGetPathContext $(echo $_Path))"
        local _Context="$(echo $_PathAgregated | cut -d '|' -f1)"
        local _Path="$(echo $_PathAgregated | cut -d '|' -f2)"

        case $_Action in
            -get)
                _t4dDebugLog $plog "_t4dModWciJenkinsExplorer $_Path"
                _t4dModJksInfoMain $(echo $_Path)
            ;;
            -start)
                _t4dDebugLog $plog "_t4dModJksUtilsStart $(echo $_Path)"
                _t4dModJksUtilsStart $(echo $_Path)
            ;;
            -startWithParams)
                _t4dDebugLog $plog "_t4dModJksUtilsStartWithParams $(echo $_Args)"
                _t4dModJksUtilsStartWithParams $(echo $_Args) 
            ;;
            *)
                _t4dDebugLog $plog "$_Action"
                _t4dDebugLog $pinfo "Path : $_Path"
                _t4dDebugLog $pinfo "Args : $_Args"
            ;;
        esac

    fi



###############################
}

_t4dModWciJenkinsAdmin(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdmin
#   - Name:
#       _t4dModWciJenkinsAdmin
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Server="$(echo $1 | cut -d ':' -f1)"
    local _Action="$2"
    local _Args="${@:3}"

    case $_Action in
        -create)
            _t4dModWciJenkinsAdminCreate -srv $_server $(echo $_Args)
        ;;
        -sync)
            _t4dModWciJenkinsAdminSync $_Server $(echo $_Args)
        ;;
        *)
            local _Path="$(_t4dJenkinsUtilsParseProjectPath $2 | sed 's|job|jobs|g' | sed 's|jobs/config.xml|config.xml|g')"
            local _Res="$(_t4dModWciJenkinsAdminGet "$_Server" "$_Path")"
            for _Line in $(echo $_Res); do
                _t4dModWciJenkinsConfigXmlStatus "$_Line"
            done
        ;;
    esac
    
    
###############################
}

_t4dModWciJenkinsAdminCreate(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdminCreate
#   - Name:
#       _t4dModWciJenkinsAdminCreate
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _path=""
    local _baseConfig=""
    local _gitSource="$(_t4dSrcGitInfoGetCloneUrl)"
    local _libSource=""
    local _gitFilter=".*"
    local _jenkinsFile="jenkinsfile"
    while [[ "$@" != "" ]]; do
        case "$1" in
            -type)
                shift
                _baseConfigName="$1"
                # jobs/_Base_/jobs/_MultiBranchPipeline_/config.xml
            ;;
            -git)
                shift
                _gitSource="$1"
            ;;
            -branchSource)
                shift
                _gitFilter="$1"
            ;;
            -jenkinsFile)
                shift
                _jenkinsFile="$1"
            ;;
            -srv)
                shift
                _server="$1"
            ;;
            *)
                _path="$1"
            ;;
        esac
        shift
    done

    baseConfig="$(_t4dJenkinsUtilsParseProjectPath $_baseConfigName | sed 's|job|jobs|g')/config.xml"
    _t4dPromptSquare "$_server"
    _t4dPromptInfo "Path"           "$_path" 17 ":" $plyellow
    _t4dPromptInfo "PipelineBase"   "$_baseConfig" 17 ":" $plyellow
    _t4dPromptInfo "GitSource"      "$_gitSource" 17 ":" $plyellow
    _t4dPromptInfo "LibSource"      "$_libSource" 17 ":" $plyellow
    _t4dPromptInfo "GitFilter"      "$_gitFilter" 17 ":" $plyellow
    _t4dPromptInfo "Jenkinsfile"    "$_jenkinsFile" 17 ":" $plyellow
    # _t4dDebugLog $plog "[$_server] _t4dSrcJenkinsSrvCreateJob $_path $_baseConfig $_gitSource $_libSource $_gitFilter $_jenkinsFile"
    # _t4dSrcJenkinsSrvCreateJob <path> <baseConfig> <gitSource> <libSource> [gitFilter] [jenkinsFile]

###############################
}

_t4dModWciJenkinsAdminSync(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdminSync
#   - Name:
#       _t4dModWciJenkinsAdminSync
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Server="$1"
    local _force="$2"
    local _SourceDir

    if [[ -e "$WS_ROOT/_Jenkins_/$_Server/.index" ]]; then
        _SourceDir="$WS_ROOT/_Jenkins_/$_Server/.index"
    else
        _SourceDir="$WS_ROOT/_Jenkins_/.index"
    fi

    if [[ -e "$_SourceDir" ]]; then
        local CHPWD=1
        cd $_SourceDir

        local _LibSource="$(_t4dManifestXmlGetData configuration name jenkins-lib git $WS_WCI_CONFIG_FILE)"
        local _Url="$(_t4dManifestXmlGetData srv name "$_Server" url $WS_WCI_CONFIG_FILE)"
        local _Root="$(_t4dManifestXmlGetData srv name "$_Server" root $WS_WCI_CONFIG_FILE)"
        local _User="$(_t4dManifestXmlGetData srv name "$_Server" admin $WS_WCI_CONFIG_FILE)"
        local _t4dRootPath="$(_t4dManifestXmlGetData srv name "$_Server" t4dRootPath $WS_WCI_CONFIG_FILE)"
        _t4dDebugLog $plog "Scanning $_Server Config"
        local _ConfigFiles="$(_t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvSearchConfigFiles -root "$_Root" "" )"


        local _Folders="$(find $_SourceDir | grep '_folder_.properties')"
        _t4dPromptSquare "Folders" $plblue
        for _folder in $(echo $_Folders); do
            local _name="$(echo $_folder | sed "s|${_SourceDir}/||g" | sed 's|.properties$||g')"
            local _dirName="$(dirname $_name)"
            local _path="$(cat $_folder | grep "^folder.path=" | cut -d '=' -f2)"
            if [[  "$(echo $_ConfigFiles | grep "$_path/config.xml")" != "" ]]; then
                 _t4dCheckSucceeded "$_dirName  ($_path) Already exist "
            else
                _t4dCheckInfo "$_dirName"
                if [[ "$_force" == "-force" ]] || [[ "$_force" == "-f" ]]; then
                    _t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvCreateFolder "$_path" "$_Root/jobs/_Base_/config.xml"
                fi
            fi
        done
        
        local _Pipelines="$(find $_SourceDir | grep '.properties$' | grep -v 'source.properties' | grep -v '_folder_.properties' )"
        _t4dPromptSquare "Pipeline" $plcyan
        for _pipeline in $(echo $_Pipelines); do

            local _PipeName="$(cat $_pipeline | grep "^pipeline.name=" | cut -d '=' -f2)"
            local _PipePath="$(cat $_pipeline | grep "^pipeline.path=" | cut -d '=' -f2)"
            local _PipeFilterBranch="$(cat $_pipeline | grep -Eo "pipeline.filterBranch=.*" | sed 's|pipeline.filterBranch=||g')"
            local _PipeJenkinsFile="$(cat $_pipeline | grep "^pipeline.jenkinsFile=" | cut -d '=' -f2)"
            local _GitSource="$(cat $_pipeline | grep "^pipeline.repoGit=" | cut -d '=' -f2)"
            local _PipeConfigFile="$(cat $_pipeline | grep "^pipeline.config.file=" | cut -d '=' -f2)"


            if [[  "$(echo $_ConfigFiles | grep "$_PipeConfigFile")" == "" ]]; then
                _t4dDebugLog $perror "config file $_PipeConfigFile does not exist"
                return $_t4dErrorCode
            fi

            
            if [[  "$(echo $_ConfigFiles | grep "$_PipePath/config.xml")" != "" ]]; then
                _t4dCheckSucceeded "$_PipeName Already exist "
            else
                _t4dCheckInfo "$_PipeName"
                _t4dDebugLog "      >" "$_PipePath"
                _t4dDebugLog "      >" "$_PipeFilterBranch"
                _t4dDebugLog "      >" "$_PipeJenkinsFile"
                _t4dDebugLog "      >" "$_GitSource"
                _t4dDebugLog "      >" "$_PipeConfigFile"

                if [[ "$_force" == "-force" ]] || [[ "$_force" == "-f" ]]; then
                    # _t4dDebugLog $plog "_t4dSrcJenkinsSrvCreateJob \"$_PipePath\" \"$_PipeConfigFile\" \"$_GitSource\" \"$_LibSource\" \"$_PipeFilterBranch\" \"$_PipeJenkinsFile\""
                    _t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvCreateJob "$_PipePath" "$_PipeConfigFile" "$_GitSource" "$_LibSource" "$_PipeFilterBranch" "$_PipeJenkinsFile"
                fi
            fi
        done
    else
        _t4dDebugLog $perror ">$_SourceDir< no such file or directory"
    fi

###############################
}

_t4dModWciJenkinsAdminGet(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsAdminGet
#   - Name:
#       _t4dModWciJenkinsAdminGet
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Server="$1"
    local _Path="$2"
    local _Url="$(_t4dManifestXmlGetData srv name "$_Server" url $WS_WCI_CONFIG_FILE)"
    local _Root="$(_t4dManifestXmlGetData srv name "$_Server" root $WS_WCI_CONFIG_FILE)"
    local _User="$(_t4dManifestXmlGetData srv name "$_Server" admin $WS_WCI_CONFIG_FILE)"
    local _t4dRootPath="$(_t4dManifestXmlGetData srv name "$_Server" t4dRootPath $WS_WCI_CONFIG_FILE)"
    local _XmlOutPutFile="$T4D_PROJECT_LOG_PATH/wci/_t4dModWciJenkinsAdmin.xml"
    local _TestNumber=1

    #GET
    _t4dDebugLog $plog "Pulling config files from $_Path"
    local _ConfigFiles="$(_t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvSearchConfigFiles -root "$_Root" "$_Path" )"
    
    if [[ "$(echo $_ConfigFiles | head -1 | grep "config.xml$")" != "" ]]; then
        local _CountFiles="$(echo $_ConfigFiles | wc -l | tr -d ' ')"
        for _file in $(echo $_ConfigFiles); do
            local _AbsolutePath="$(echo $_file | sed "s|$_Root||g" | sed 's|/config.xml$||g')"
            
            # _t4dDebugTimer "$_TestNumber" "$(echo $_AbsolutePath | sed 's|/jobs/|/|g')"
            _t4dDebugLogInProgress "Downloading File(s)" $_TestNumber $_CountFiles
            _t4dSrcJenkinsSrvExec "$_Url" "$_User" "${_t4dRootPath}" _t4dSrcJenkinsSrvGetConfigFile $_file > $_XmlOutPutFile
            
            
            local _Data2="$(_t4dModWciJenkinsParseConfigXml "$_XmlOutPutFile")"
            _TestNumber=$(expr $_TestNumber + 1)
            echo "$_AbsolutePath|$_Data2"
            # _t4dModWciJenkinsConfigXmlStatus "$_AbsolutePath" "$_Data2"

        done
        _t4dDebugTimerReset 
    else
        _t4dDebugLog $perror "_t4dModWciJenkinsAdminGet - no config files found in >$_Root/$_Path<"
        _t4dDebugLog $pinfo "$_ConfigFiles"
        return $_t4dErrorCode
    fi

###############################
}


_t4dModWciJenkinsConfigXmlGetType(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
######_t4dModWciJenkinsConfigXmlGetType
#   - Name:
#      _t4dModWciJenkinsConfigXmlGetType
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    if [[ -e "$_File" ]] && [[ "$_File" != "" ]]; then
        if [[ "$(cat "$_File" | grep 'WorkflowMultiBranchProject')" != "" ]]; then
            echo "WorkflowMultiBranchProject"
        elif [[ "$(cat "$_File" | grep 'JobPropertyTrackerAction')" != "" ]]; then
            echo "JobPropertyTrackerAction"
        else
            echo "folder"
        fi
    else
        _t4dDebugLog $perror "_t4dModWciJenkinsConfigXmlGetType - Could not read file >$_File<"
        return $_t4dErrorCode
    fi

###############################
}


_t4dModWciJenkinsParseConfigXml(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsParseConfigXml
#   - Name:
#       _t4dModWciJenkinsParseConfigXml
###
#   - Synopsis:
#       Read XML Config File then return output
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    local _Type="$(_t4dModWciJenkinsConfigXmlGetType $_File)"

    case $_Type in
        WorkflowMultiBranchProject)
            local _BranchSource="$(_t4dSrcXmlGetSection "$_File" "jenkins.branch.BranchSource")"
            local _scriptPath="$(_t4dSrcXmlGetSection "$_File" "scriptPath")"
            local _Remote="$(_t4dSrcXmlGetSection "$_BranchSource" "remote")"
            local _Creds="$(_t4dSrcXmlGetSection "$_BranchSource" "credentialsId")"
            local _RegexBranch="$(_t4dSrcXmlGetSection "$_BranchSource" "regex")"
            echo "pipeline|$_Remote|$_Creds|$_RegexBranch"
        ;;
        JobPropertyTrackerAction)
            echo "pipeline-jobs"
        ;;
        *)
            echo "folder"
        ;;
    esac

    
    

###############################
}

_t4dModWciJenkinsConfigXmlStatus(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsConfigXmlStatus
#   - Name:
#       _t4dModWciJenkinsConfigXmlStatus
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Data="$1"
    local _Output="${2:-shell}"
    # _t4dDebugLog $plog ">$_Origin<"
    case $_Output in
        shell)
            local _Origin="$(echo $_Data | cut -d '|' -f1)"
            local _Type="$(echo $_Data | cut -d '|' -f2)"
            local _Indent="$(echo $_Origin | grep -Eo '/'  | tr -d '\n' | sed 's|/| |g')"
            local _Title="$(basename $_Origin | head -1)"
            case $_Type in
                folder)
                    echo "${plblue}${_Indent}${_Title}/${pstd}"
                ;;
                pipeline)
                    echo "${plpurple}$_Indent - ${_Title}${pstd}"
                    echo "$_Indent   + ${_Data}"
                ;;
                pipeline-jobs)
                    echo "${plpurple}$_Indent - ${_Title}${pstd}"
                    echo "$_Indent   + ${_Data}"
                ;;
                *)
                    _t4dDebugLog $perror "_t4dModWciJenkinsConfigXmlStatus - Unknown Type >$_Type<"
                ;;
            esac
        ;;
        *)
            _t4dDebugLog $perror "_t4dModWciJenkinsParseConfigXml - output >$_Output< not supported"
        ;;
    esac
    

###############################
}



_t4dModWciJenkinsConfigure(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsConfigure
#   - Name:
#       _t4dModWciJenkinsConfigure
###
#   - Synopsis:
#       description
###
#   - Description:
#           To manually create  it you have to go to $T4D_WCI_SRV_URL
#               1. log in with your account
#               2. Click on the top right corner %YourName% then Configure
#               3. Add Token or show legacy token
#               4. copy and paste it by adding {-token <yourToken>}
###
#   - Usage:
#       * _t4dModWciJenkinsConfigure <serverName> -u <%YourName%> -token <%YourToken%>
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _ConnectedUser="Uknown"
    local _tokenAccess=""
    local _userName=""
    local _userPasswd=""
    local _UpdateCredsFile="false"

    while [[ "$@" != "" ]]; do
        case "$1" in
            -user|-u)
                shift
                _userName="$1"
            ;;
            -passwd|-p)
                shift
                _userPasswd="$1"
            ;;
            -token)
                shift
                _tokenAccess="$1"
            ;;
        esac
        shift
    done

    if [[ "$T4D_WCI_AUTH_ACCESS" == "" ]]; then
        _t4dDebugLog $perror "Unable to find user login"
        if [[ "$_userName" == "" ]]; then
            _userName="$(git config --get user.email)"
            _t4dDebugLog $pwarning "$_userName selected, please use -user to modify"
        fi

        local _auth="$(_t4dManifestXmlGetData srv url "$T4D_WCI_SRV_URL" auth $WS_WCI_CONFIG_FILE)"
        
        if [[ "$_tokenAccess" != "" ]]; then

            _t4dDebugLog $plog "create new token with $_userName:$_tokenAccess "
            JENKINS_USER_AND_PASSWORD="$_userName:$_tokenAccess"
            T4D_WCI_AUTH_ACCESS="$_userName:$_tokenAccess"
            _UpdateCredsFile="true"
        else
            if [[ "$_auth" == "ldap" ]]; then
                if [[ "$_userPasswd" == "" ]]; then
                    _t4dDebugLog $plog "Please enter your password for $_userName"
                    read -s _userPasswd
                fi

                local _Token="$(_t4dSrcjenkinsApiGenerateToken "$T4D_WCI_SRV_URL" "${_userName}" "${_userPasswd}")"
                if [[ "$_Token" != "" ]]; then
                    _t4dDebugLog $plog "Using new token - $_Token "
                    T4D_WCI_AUTH_ACCESS="${_userName}:${_Token}"
                    JENKINS_USER_AND_PASSWORD="$_userName:$_Token"
                    _UpdateCredsFile="true"
                else
                    _t4dPromptSquare "Unable to create token, wrong user/password" $plred
                    return $_t4dErrorCode
                fi

            else
                if [[ "$T4D_WCI_SRV_URL" == "$JENKINS_WEB_URL" ]] && [[ "$JENKINS_USER_AND_PASSWORD" != "" ]]; then
                    T4D_WCI_AUTH_ACCESS="$JENKINS_USER_AND_PASSWORD"
                    _UpdateCredsFile="true"
                else
                    _t4dDebugLog $plog "You will need to create your own token"
                    _t4dDebugLog $pinfo "T4D_WCI_SRV_URL=$T4D_WCI_SRV_URL"
                    t4dHelp _t4dModWciJenkinsConfigure Description
                    return $_t4dErrorCode
                fi
            fi
            
        fi
    fi

    _ConnectedUser="$(echo $T4D_WCI_AUTH_ACCESS | cut -d ':' -f1)"
    local _ErrorMainPage="$(_t4dSrcJenkinsApiGetMainPage | grep -Eo "ERROR.*")"
    if [[ "$_ErrorMainPage" != "" ]]; then
        _t4dDebugLog $pinfo "JENKINS_WEB_URL=$JENKINS_WEB_URL"
        _t4dDebugLog $pinfo "JENKINS_USER_AND_PASSWORD=$JENKINS_USER_AND_PASSWORD"
        _t4dPromptSquare "$T4D_WCI_SRV_URL Failed - $(_t4dSrcJenkinsApiGetMainPage | grep -Eo "ERROR.*")" $plred
        
        return $_t4dErrorCode
    else
        _t4dPromptSquare "Connected to $T4D_WCI_SRV_URL as $_ConnectedUser" $plgreen
    fi

    if [[ "$_UpdateCredsFile" == "true" ]]; then
        local _Line="$T4D_WCI_SRV_NAME=$JENKINS_USER_AND_PASSWORD"
        _t4dDebugLog $plog "Adding $_Line"
        cat $T4D_MOD_WCI_CREDENTIALS_FILE > $T4D_MOD_WCI_CREDENTIALS_FILE.tmp
        echo "$_Line" >> $T4D_MOD_WCI_CREDENTIALS_FILE.tmp
        mv $T4D_MOD_WCI_CREDENTIALS_FILE.tmp $T4D_MOD_WCI_CREDENTIALS_FILE && _t4dCheckSucceeded "Token Updated"
    fi
        
   
###############################
}

_t4dModWciJenkinsGetPathContext(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsGetPathContext
#   - Name:
#       _t4dModWciJenkinsGetPathContext
###
#   - Synopsis:
#       Get context from path sended
###
#   - Usage:
#       _t4dModWciJenkinsGetPathContext [shortcut] <Path>
###
#   - Shortcuts:
#       * lastBuild                     = search for lastBuild path using current repo/branch
#       * branches                      = search for jenkins path using current repo/branch
#       * pipelines                     = search for jenkins path using current repo
#
###
#   - Example:
#       * _t4dModWciJenkinsGetPathContext lastBuild                             = get last build path
#       * _t4dModWciJenkinsGetPathContext branches                              = list branch of current pipeline
#       * _t4dModWciJenkinsGetPathContext pipelines                             = list pipelines of current repo's jenkins config
#       * _t4dModWciJenkinsGetPathContext pipelines Pipeline-Develop            = list branch/tags in Pipeline-Develop
#       * _t4dModWciJenkinsGetPathContext pipelines Pipeline-Develop develop    = list build in Pipeline-Develop/develop
#       * _t4dModWciJenkinsGetPathContext Pipeline-Develop                      = list branch in Pipeline-Develop, adding WS_JENKINS_ROOT as prefix
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Path="$@"
    local _branchName="$(_t4dSrcGitInfoBranch)"
    local _WhatIsIt="folder"
    case $_Path in 
        lastBuild*)
            _BuildPath="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName) $_branchName lastBuild"
            if [[ "$_Path" == "lastBuild" ]]; then
                _Path="${_BuildPath}"
            else
                _Path="$(echo $_Path | sed "s|lastBuild |$_BuildPath/|g")"
            fi
        ;;
        branches*)
            _BranchPath="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
            if [[ "$_Path" == "branches" ]]; then
                _Path="${_BranchPath}"
            else
                _Path="$(echo $_Path | sed "s|branches |$_BranchPath/|g")"
            fi
        ;;
        pipelines*)
            if [[ "$_Path" == "pipelines" ]]; then
                _Path="${WS_JENKINS_ROOT}"
            else
                _Path="$(echo $_Path | sed "s|pipelines |$WS_JENKINS_ROOT/|g")"
            fi
        ;;
        Pipeline-*)
            if [[ "$WS_JENKINS_ROOT" != "" ]]; then
                _Path="${WS_JENKINS_ROOT}/$_Path"
            fi
        ;;
        *)
            if [[  "$_Action" != "-get"  ]] && [[ "$_Path" == "" ]]; then
                _Path="$(_t4dSrcJenkinsUtilsParseProject "${WS_JENKINS_PROJECT_NAME}" "$_branchName") $_branchName"
            fi
        ;;
    esac

    _PathCount="$(echo $_Path | wc -w | tr -d ' ')"
    _t4dDebugLog $plog "$_Path >$_PathCount"
    case $_PathCount in
        1)
            _WhatIsIt="folder"
        ;;
        2)
            _WhatIsIt="branch"
        ;;
        3)
            _WhatIsIt="build"
        ;;
        *)
            _t4dDebugLog $pwarning "_t4dModWciJenkinsGetPathContext unable to find context, using folder as default"
        ;;
    esac

    echo "$_WhatIsIt|$_Path"

###############################
}
