_t4dModWciJenkinsStartWithParams(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsStartWithParams
#   - Name:
#       _t4dModWciJenkinsStartWithParams
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Option="status"
    local _Ouput=""
    local _Pipeline=""
    local _Verbosity="0"
    local _Path="$1"
    local _Project="$(echo $_Path | cut -d ' ' -f1 | sed 's|/job/|/|g')"
    local _Branch="$(echo $_Path | cut -d ' ' -f2)"
    local _Jenkinsfile="$(_t4dModWciJenkinsGetJenkinsfileFromPath $_Project)"
    local _Params=""
    if [[ "$_Jenkinsfile" != "" ]] && [[ -e "$_Jenkinsfile" ]]; then
        _Params="$(_t4dSrcJenkinsFilesGetParams $_Jenkinsfile)"
    fi
    shift

    while [[ "$@" != "" ]]; do
        case "$1" in
            -Param|-P)
                _Type="$(echo $_Params | grep "^$2|" | cut -d '|' -f2 )"
                _Params="$(echo $_Params | grep -v "^$2|" || true)"
                _Params="$_Params\n$2|$_Type|$3"
                shift
                shift
            ;;
            -slack)
                if [[ "$WS_CUSTOM_CHANNEL_NOTIFICATION" != "" ]] && [[ "$(echo $_Params | grep "^SlackChannel|")" != "" ]]; then
                    _Type="$(echo $_Params | grep "^SlackChannel|" | cut -d '|' -f2 )"
                    _Params="$(echo $_Params | grep -v "^SlackChannel|")"
                    _Params="$_Params\nSlackChannel|$_Type|${WS_CUSTOM_CHANNEL_NOTIFICATION:-null}"
                else
                    _t4dDebugLog "$warning" "WS_CUSTOM_CHANNEL_NOTIFICATION variable not defined or SlackChannel params not available"
                fi
            ;;
            -clean|-c)
                _Params="$(echo $_Params | sed 's|true$|false|g')"
            ;;
            -Filter|-F)
                _Type="$(echo $_Params | grep "^$2" | cut -d '|' -f2 | uniq )"
                _Filter="$(echo $_Params | grep "^$2" | cut -d '|' -f1)"
                _Params="$(echo $_Params | grep -v "^$2")"
                local _Result=""
                if [[ "$(echo $_Type | head -1 | cut -d ' ' -f1)" != "$_Type" ]]; then
                    _t4dDebugLog $perror "$_Type is not uniq"
                    return 1
                fi
                
                for _filteredParam in $(echo $_Filter); do
                    # _t4dDebugLog $pinfo ">> $_filteredParam"
                    _Result="$_Result\n$_filteredParam|$_Type|$3"
                done
                _Params="$_Params\n$_Result"
                shift
                shift
            ;;
            -force|-f)
                _Option="launch"
            ;;
            -jenkinsFile)
                _Jenkinsfile="$2"
                if [[ -e "$_Jenkinsfile" ]]; then
                    _Params="$(_t4dSrcJenkinsFilesGetParams $_Jenkinsfile)"
                else
                    _t4dDebugLog $perror "-jenkinsFile) provided file does not exist >${_Jenkinsfile}<"
                fi
                shift
            ;;
            # -clear-params)
            #     _t4dDebugLog $pwarning "removing all previous params set"
            #     _Params=""
            # ;;
            # -pipeline)
            #     # _t4dDebugLog $pwarning "Using $2 as external pipeline : cleaning Parameters"
            #     # _t4dDebugLog $pwarning "This should only be used by a script"
            #     _Pipeline="$2"
            #     shift
            # ;;
            # -pipeline-param)
            #     _t4dDebugLog $pinfo "Forcing Params $2 [$3] - $4"
            #     _Params="$_Params\n$2|$3|$4"
            #     shift
            #     shift
            #     shift
            # ;;
            -verbose|-v)
                _Verbosity="1"
            ;;
            *)
                _t4dDebugLog $perror "Empty or Unknown argument < $1 >"
                return $_t4dErrorCode
            ;;
        esac
        shift
    done

    #Format Space for URL
    _Params="$(echo $_Params | sed 's| |%20|g')"

    case $_Option in
        launch)
            _Ouput=""
            _OuputOpt=""
            for _param in $(echo $_Params); do
                local _name="$(echo $_param | cut -d '|' -f1)"
                local _value="$(echo $_param | cut -d '|' -f3)"
                _Ouput="${_Ouput}&${_name}=${_value}"
            done
            if [[ "$_Verbosity" != "0" ]]; then
                _t4dDebugLog $plog "_t4dModJksUtilsStart -extraArg "$_Ouput" $(echo $_Path)"
            fi
            _t4dModJksUtilsStart -extraArg "$_Ouput" $(echo $_Path) || return 1
        ;;
        status)
            if [[ -e "$_Jenkinsfile" ]]; then
                _t4dPromptSquare "${_Project} %%[${_Branch}]%% $(basename ${_Jenkinsfile:-unknown})" $plblue $plred
            else
                _t4dPromptSquare "No JenkinsFile provided" $plyellow
            fi
            for _param in $(echo $_Params); do
                local _name="$(_t4dPromptVarWithSpace 25 "$(echo $_param | cut -d '|' -f1)" | sed 's|%||g')"
                local _type="$(_t4dPromptVarWithSpace 10 "$(echo $_param | cut -d '|' -f2)" | sed 's|%||g' \
                                                | sed "s|boolean|\\${plblue}boolean\\${pstd}|g" \
                                                | sed "s|string|\\${plpurple}string\\${pstd}|g")"
                local _value="$(echo $_param | cut -d '|' -f3 \
                                                | sed 's|%20| |g' \
                                                | sed "s|true$|\\${plgreen}true\\${pstd}|g" \
                                                | sed "s|false$|\\${plred}false\\${pstd}|g")"
                if [[ "$(echo ${_name} | grep '^MB')" != "" ]]; then
                    _OuputOpt="${_OuputOpt}\n${_type:-unknown} - ${_name} = ${_value}" 
                else
                    _Ouput="${_Ouput}\n${_type:-unknown} - ${_name} = ${_value}" 
                fi
                
            done
            if [[ "$_Pipeline" != "" ]]; then
                _t4dPromptSquare "${_Pipeline}" $plblue
            fi
            echo "$_Ouput" | sort
            if [[ "$_OuputOpt" != "" ]]; then
                echo "$_OuputOpt" | sort
            fi
            _t4dPromptSquare "This was a dry run, Specify -f option to launch parameterized build" "${plpurple}"
        ;;
        *)
            _t4dDebugLog $perror "_t4dJenkinsUtilsParams : option ${plyellow}${_Option}${pstd} not available"
            return 1
        ;;
    esac

###############################
}

_t4dModWciJenkinsStart(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsStart
#   - Name:
#       _t4dModWciJenkinsStart
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Option="status"
    local _Ouput=""
    local _Params="$(_t4dSrcJenkinsFilesGetParams)"
    local _Pipeline=""
    local _Verbosity="0"
    

###############################
}

_t4dModWciJenkinsGetJenkinsfileFromPath(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModWciJenkinsGetJenkinsfileFromPath
#   - Name:
#       _t4dModWciJenkinsGetJenkinsfileFromPath
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _JenkinsPath="$1"

    if [[ -e "$WS_ROOT/_Jenkins_/.index/${T4D_WCI_SRV_NAME}" ]]; then
        local _Root="$(_t4dManifestXmlGetData srv name "$T4D_WCI_SRV_NAME" "root" $WS_WCI_CONFIG_FILE)"
        local _Res="$(grep -r "pipeline.path" $WS_ROOT/_Jenkins_/.index/${T4D_WCI_SRV_NAME} | sed "s|$_Root/jobs/||g" | sed 's|/jobs/|/|g' | grep "${_JenkinsPath}")"
        local _Count="$(echo $_Res | wc -l | tr -d ' ')"
        if [[ "$_Count" == "1" ]] && [[ "$_Res" != "" ]]; then
            local _File="$(echo $_Res | cut -d ':' -f1)"
            cat $_File | grep 'pipeline.jenkinsFile=' | cut -d '=' -f2
            _t4dDebugLog $pwarning "No jenkinsfile found"
        fi
    elif [[ "$T4D_WCI_SRV_NAME" == "" ]]; then
        _t4dDebugLog $perror "T4D_WCI_SRV_NAME is empty"
    else
        _t4dDebugLog $perror "folder $WS_ROOT/_Jenkins_/.index/${T4D_WCI_SRV_NAME} does not exist"
    fi
    # local JENKINS_WEB_URL
    

###############################
}